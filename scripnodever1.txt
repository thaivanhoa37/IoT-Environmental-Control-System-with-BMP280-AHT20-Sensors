[
    {
        "id": "a1b2c3d4e5f6",
        "type": "tab",
        "label": "ESP32_IOT_Controller",
        "disabled": false,
        "info": ""
    },
    {
        "id": "mqtt-broker",
        "type": "mqtt-broker",
        "name": "MQTT Broker",
        "broker": "192.168.137.235",
        "port": "1883",
        "clientid": "node-red-client",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "ui-group-1",
        "type": "ui_group",
        "name": "Sensor Data",
        "tab": "ui-tab-1",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ui-group-2",
        "type": "ui_group",
        "name": "Control",
        "tab": "ui-tab-1",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ui-group-3",
        "type": "ui_group",
        "name": "Status",
        "tab": "ui-tab-1",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ui-tab-1",
        "type": "ui_tab",
        "name": "ESP32 IOT Controller",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "temp-in",
        "type": "mqtt in",
        "z": "a1b2c3d4e5f6",
        "name": "Temperature",
        "topic": "iot/state/temperature",
        "qos": "2",
        "datatype": "auto",
        "broker": "mqtt-broker",
        "x": 120,
        "y": 100,
        "wires": [["store-temp", "debug-temp"]]
    },
    {
        "id": "debug-temp",
        "type": "debug",
        "z": "a1b2c3d4e5f6",
        "name": "Debug Temperature",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 60,
        "wires": []
    },
    {
        "id": "store-temp",
        "type": "function",
        "z": "a1b2c3d4e5f6",
        "name": "Store Temperature",
        "func": "msg.payload = parseFloat(msg.payload);\nif (isNaN(msg.payload)) {\n    msg.payload = flow.get('temperature') || 0;\n} else {\n    flow.set('temperature', msg.payload);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 100,
        "wires": [["temp-gauge", "connection-status"]]
    },
    {
        "id": "temp-gauge",
        "type": "ui_gauge",
        "z": "a1b2c3d4e5f6",
        "name": "Temperature",
        "group": "ui-group-1",
        "order": 1,
        "width": "6",
        "height": "6",
        "gtype": "gauge",
        "title": "Temperature",
        "label": "Â°C",
        "format": "{{value | number:1}}",
        "min": "0",
        "max": "50",
        "colors": ["#00b500", "#e6e600", "#ca3838"],
        "seg1": "25",
        "seg2": "35",
        "x": 540,
        "y": 100,
        "wires": []
    },
    {
        "id": "humi-in",
        "type": "mqtt in",
        "z": "a1b2c3d4e5f6",
        "name": "Humidity",
        "topic": "iot/state/humidity",
        "qos": "2",
        "datatype": "auto",
        "broker": "mqtt-broker",
        "x": 120,
        "y": 160,
        "wires": [["store-humi", "debug-humi"]]
    },
    {
        "id": "debug-humi",
        "type": "debug",
        "z": "a1b2c3d4e5f6",
        "name": "Debug Humidity",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 120,
        "wires": []
    },
    {
        "id": "store-humi",
        "type": "function",
        "z": "a1b2c3d4e5f6",
        "name": "Store Humidity",
        "func": "msg.payload = parseFloat(msg.payload);\nif (isNaN(msg.payload)) {\n    msg.payload = flow.get('humidity') || 0;\n} else {\n    flow.set('humidity', msg.payload);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 160,
        "wires": [["humi-gauge"]]
    },
    {
        "id": "humi-gauge",
        "type": "ui_gauge",
        "z": "a1b2c3d4e5f6",
        "name": "Humidity",
        "group": "ui-group-1",
        "order": 2,
        "width": "6",
        "height": "6",
        "gtype": "gauge",
        "title": "Humidity",
        "label": "%",
        "format": "{{value | number:1}}",
        "min": "0",
        "max": "100",
        "colors": ["#00b500", "#e6e600", "#ca3838"],
        "seg1": "50",
        "seg2": "80",
        "x": 540,
        "y": 160,
        "wires": []
    },
    {
        "id": "press-in",
        "type": "mqtt in",
        "z": "a1b2c3d4e5f6",
        "name": "Pressure",
        "topic": "iot/state/pressure",
        "qos": "2",
        "datatype": "auto",
        "broker": "mqtt-broker",
        "x": 120,
        "y": 220,
        "wires": [["store-press", "debug-press"]]
    },
    {
        "id": "debug-press",
        "type": "debug",
        "z": "a1b2c3d4e5f6",
        "name": "Debug Pressure",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 180,
        "wires": []
    },
    {
        "id": "store-press",
        "type": "function",
        "z": "a1b2c3d4e5f6",
        "name": "Store Pressure",
        "func": "msg.payload = parseFloat(msg.payload);\nif (isNaN(msg.payload)) {\n    msg.payload = flow.get('pressure') || 0;\n} else {\n    flow.set('pressure', msg.payload);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 220,
        "wires": [["press-gauge"]]
    },
    {
        "id": "press-gauge",
        "type": "ui_gauge",
        "z": "a1b2c3d4e5f6",
        "name": "Pressure",
        "group": "ui-group-1",
        "order": 3,
        "width": "6",
        "height": "6",
        "gtype": "gauge",
        "title": "Pressure",
        "label": "hPa",
        "format": "{{value | number:1}}",
        "min": "900",
        "max": "1100",
        "colors": ["#00b500", "#e6e600", "#ca3838"],
        "seg1": "1000",
        "seg2": "1020",
        "x": 540,
        "y": 220,
        "wires": []
    },
    {
        "id": "alt-in",
        "type": "mqtt in",
        "z": "a1b2c3d4e5f6",
        "name": "Altitude",
        "topic": "iot/state/altitude",
        "qos": "2",
        "datatype": "auto",
        "broker": "mqtt-broker",
        "x": 120,
        "y": 280,
        "wires": [["store-alt", "debug-alt"]]
    },
    {
        "id": "debug-alt",
        "type": "debug",
        "z": "a1b2c3d4e5f6",
        "name": "Debug Altitude",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 240,
        "wires": []
    },
    {
        "id": "store-alt",
        "type": "function",
        "z": "a1b2c3d4e5f6",
        "name": "Store Altitude",
        "func": "msg.payload = parseFloat(msg.payload);\nif (isNaN(msg.payload)) {\n    msg.payload = flow.get('altitude') || 0;\n} else {\n    flow.set('altitude', msg.payload);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 280,
        "wires": [["alt-gauge"]]
    },
    {
        "id": "alt-gauge",
        "type": "ui_gauge",
        "z": "a1b2c3d4e5f6",
        "name": "Altitude",
        "group": "ui-group-1",
        "order": 4,
        "width": "6",
        "height": "6",
        "gtype": "gauge",
        "title": "Altitude",
        "label": "m",
        "format": "{{value | number:1}}",
        "min": "-100",
        "max": "1000",
        "colors": ["#00b500", "#e6e600", "#ca3838"],
        "seg1": "0",
        "seg2": "500",
        "x": 540,
        "y": 280,
        "wires": []
    },
    {
        "id": "mode-in",
        "type": "mqtt in",
        "z": "a1b2c3d4e5f6",
        "name": "Mode State",
        "topic": "iot/state/mode",
        "qos": "2",
        "datatype": "auto",
        "broker": "mqtt-broker",
        "x": 120,
        "y": 340,
        "wires": [["store-mode", "debug-mode"]]
    },
    {
        "id": "debug-mode",
        "type": "debug",
        "z": "a1b2c3d4e5f6",
        "name": "Debug Mode",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 300,
        "wires": []
    },
    {
        "id": "store-mode",
        "type": "function",
        "z": "a1b2c3d4e5f6",
        "name": "Store Mode",
        "func": "msg.payload = (msg.payload === 'true');\nflow.set('mode', msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 340,
        "wires": [["mode-switch"]]
    },
    {
        "id": "mode-switch",
        "type": "ui_switch",
        "z": "a1b2c3d4e5f6",
        "name": "Mode",
        "label": "Mode",
        "tooltip": "Switch between Auto and Manual mode",
        "group": "ui-group-2",
        "order": 1,
        "width": "6",
        "height": "1",
        "passthru": true,
        "labelOn": "Auto",
        "labelOff": "Manual",
        "valueOn": true,
        "valueOff": false,
        "topic": "iot/control/mode",
        "topicType": "str",
        "x": 540,
        "y": 340,
        "wires": [["format-mode"]]
    },
    {
        "id": "format-mode",
        "type": "function",
        "z": "a1b2c3d4e5f6",
        "name": "Format Mode",
        "func": "msg.payload = msg.payload ? 'true' : 'false';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 340,
        "wires": [["mode-out", "debug-mode-out"]]
    },
    {
        "id": "debug-mode-out",
        "type": "debug",
        "z": "a1b2c3d4e5f6",
        "name": "Debug Mode Out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 300,
        "wires": []
    },
    {
        "id": "mode-out",
        "type": "mqtt out",
        "z": "a1b2c3d4e5f6",
        "name": "",
        "topic": "iot/control/mode",
        "qos": "2",
        "retain": "false",
        "broker": "mqtt-broker",
        "x": 900,
        "y": 340,
        "wires": []
    },
    {
        "id": "device1-in",
        "type": "mqtt in",
        "z": "a1b2c3d4e5f6",
        "name": "Heater State",
        "topic": "iot/state/device1",
        "qos": "2",
        "datatype": "auto",
        "broker": "mqtt-broker",
        "x": 120,
        "y": 400,
        "wires": [["store-device1", "debug-device1"]]
    },
    {
        "id": "debug-device1",
        "type": "debug",
        "z": "a1b2c3d4e5f6",
        "name": "Debug Heater",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 360,
        "wires": []
    },
    {
        "id": "store-device1",
        "type": "function",
        "z": "a1b2c3d4e5f6",
        "name": "Store Device 1",
        "func": "msg.payload = (msg.payload === 'true');\nflow.set('device1', msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 400,
        "wires": [["device1-switch"]]
    },
    {
        "id": "device1-switch",
        "type": "ui_switch",
        "z": "a1b2c3d4e5f6",
        "name": "Heater",
        "label": "Heater",
        "tooltip": "Control Heater (only in Manual mode)",
        "group": "ui-group-2",
        "order": 2,
        "width": "6",
        "height": "1",
        "passthru": true,
        "labelOn": "ON",
        "labelOff": "OFF",
        "valueOn": true,
        "valueOff": false,
        "topic": "iot/control/device1",
        "topicType": "str",
        "x": 540,
        "y": 400,
        "wires": [["device1-check"]]
    },
    {
        "id": "device1-check",
        "type": "function",
        "z": "a1b2c3d4e5f6",
        "name": "Check Manual Mode for Device 1",
        "func": "var isAuto = flow.get('mode') || false;\nif (isAuto) {\n    return null; // KhÃ´ng gá»­i náº¿u á» cháº¿ Äá» Auto\n}\nmsg.payload = msg.payload ? 'true' : 'false';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 400,
        "wires": [["device1-out", "debug-device1-out"]]
    },
    {
        "id": "debug-device1-out",
        "type": "debug",
        "z": "a1b2c3d4e5f6",
        "name": "Debug Heater Out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 360,
        "wires": []
    },
    {
        "id": "device1-out",
        "type": "mqtt out",
        "z": "a1b2c3d4e5f6",
        "name": "",
        "topic": "iot/control/device1",
        "qos": "2",
        "retain": "false",
        "broker": "mqtt-broker",
        "x": 900,
        "y": 400,
        "wires": []
    },
    {
        "id": "device2-in",
        "type": "mqtt in",
        "z": "a1b2c3d4e5f6",
        "name": "Humidifier State",
        "topic": "iot/state/device2",
        "qos": "2",
        "datatype": "auto",
        "broker": "mqtt-broker",
        "x": 120,
        "y": 460,
        "wires": [["store-device2", "debug-device2"]]
    },
    {
        "id": "debug-device2",
        "type": "debug",
        "z": "a1b2c3d4e5f6",
        "name": "Debug Humidifier",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 420,
        "wires": []
    },
    {
        "id": "store-device2",
        "type": "function",
        "z": "a1b2c3d4e5f6",
        "name": "Store Device 2",
        "func": "msg.payload = (msg.payload === 'true');\nflow.set('device2', msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 460,
        "wires": [["device2-switch"]]
    },
    {
        "id": "device2-switch",
        "type": "ui_switch",
        "z": "a1b2c3d4e5f6",
        "name": "Humidifier",
        "label": "Humidifier",
        "tooltip": "Control Humidifier (only in Manual mode)",
        "group": "ui-group-2",
        "order": 3,
        "width": "6",
        "height": "1",
        "passthru": true,
        "labelOn": "ON",
        "labelOff": "OFF",
        "valueOn": true,
        "valueOff": false,
        "topic": "iot/control/device2",
        "topicType": "str",
        "x": 540,
        "y": 460,
        "wires": [["device2-check"]]
    },
    {
        "id": "device2-check",
        "type": "function",
        "z": "a1b2c3d4e5f6",
        "name": "Check Manual Mode for Device 2",
        "func": "var isAuto = flow.get('mode') || false;\nif (isAuto) {\n    return null; // KhÃ´ng gá»­i náº¿u á» cháº¿ Äá» Auto\n}\nmsg.payload = msg.payload ? 'true' : 'false';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 460,
        "wires": [["device2-out", "debug-device2-out"]]
    },
    {
        "id": "debug-device2-out",
        "type": "debug",
        "z": "a1b2c3d4e5f6",
        "name": "Debug Humidifier Out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 420,
        "wires": []
    },
    {
        "id": "device2-out",
        "type": "mqtt out",
        "z": "a1b2c3d4e5f6",
        "name": "",
        "topic": "iot/control/device2",
        "qos": "2",
        "retain": "false",
        "broker": "mqtt-broker",
        "x": 900,
        "y": 460,
        "wires": []
    },
    {
        "id": "temp-thresh-in",
        "type": "mqtt in",
        "z": "a1b2c3d4e5f6",
        "name": "Temp Threshold",
        "topic": "iot/state/temp_threshold",
        "qos": "2",
        "datatype": "auto",
        "broker": "mqtt-broker",
        "x": 120,
        "y": 520,
        "wires": [["store-temp-thresh", "debug-temp-thresh"]]
    },
    {
        "id": "debug-temp-thresh",
        "type": "debug",
        "z": "a1b2c3d4e5f6",
        "name": "Debug Temp Threshold",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 480,
        "wires": []
    },
    {
        "id": "store-temp-thresh",
        "type": "function",
        "z": "a1b2c3d4e5f6",
        "name": "Store Temp Threshold",
        "func": "msg.payload = parseFloat(msg.payload);\nif (isNaN(msg.payload)) {\n    msg.payload = flow.get('tempThreshold') || 25;\n} else {\n    flow.set('tempThreshold', msg.payload);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 520,
        "wires": [["temp-thresh-numeric"]]
    },
    {
        "id": "temp-thresh-numeric",
        "type": "ui_numeric",
        "z": "a1b2c3d4e5f6",
        "name": "Temp Threshold",
        "label": "Temp Threshold",
        "tooltip": "Set temperature threshold for Auto mode",
        "group": "ui-group-2",
        "order": 4,
        "width": "6",
        "height": "1",
        "wrap": false,
        "format": "{{value | number:1}}",
        "min": "0",
        "max": "50",
        "step": "1",
        "passthru": true,
        "topic": "iot/control/temp_threshold",
        "topicType": "str",
        "x": 540,
        "y": 520,
        "wires": [["temp-thresh-out"]]
    },
    {
        "id": "temp-thresh-out",
        "type": "mqtt out",
        "z": "a1b2c3d4e5f6",
        "name": "",
        "topic": "iot/control/temp_threshold",
        "qos": "2",
        "retain": "false",
        "broker": "mqtt-broker",
        "x": 740,
        "y": 520,
        "wires": []
    },
    {
        "id": "humi-thresh-in",
        "type": "mqtt in",
        "z": "a1b2c3d4e5f6",
        "name": "Humi Threshold",
        "topic": "iot/state/humi_threshold",
        "qos": "2",
        "datatype": "auto",
        "broker": "mqtt-broker",
        "x": 120,
        "y": 580,
        "wires": [["store-humi-thresh", "debug-humi-thresh"]]
    },
    {
        "id": "debug-humi-thresh",
        "type": "debug",
        "z": "a1b2c3d4e5f6",
        "name": "Debug Humi Threshold",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 540,
        "wires": []
    },
    {
        "id": "store-humi-thresh",
        "type": "function",
        "z": "a1b2c3d4e5f6",
        "name": "Store Humi Threshold",
        "func": "msg.payload = parseFloat(msg.payload);\nif (isNaN(msg.payload)) {\n    msg.payload = flow.get('humiThreshold') || 60;\n} else {\n    flow.set('humiThreshold', msg.payload);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 580,
        "wires": [["humi-thresh-numeric"]]
    },
    {
        "id": "humi-thresh-numeric",
        "type": "ui_numeric",
        "z": "a1b2c3d4e5f6",
        "name": "Humi Threshold",
        "label": "Humi Threshold",
        "tooltip": "Set humidity threshold for Auto mode",
        "group": "ui-group-2",
        "order": 5,
        "width": "6",
        "height": "1",
        "wrap": false,
        "format": "{{value | number:1}}",
        "min": "0",
        "max": "100",
        "step": "1",
        "passthru": true,
        "topic": "iot/control/humi_threshold",
        "topicType": "str",
        "x": 540,
        "y": 580,
        "wires": [["humi-thresh-out"]]
    },
    {
        "id": "humi-thresh-out",
        "type": "mqtt out",
        "z": "a1b2c3d4e5f6",
        "name": "",
        "topic": "iot/control/humi_threshold",
        "qos": "2",
        "retain": "false",
        "broker": "mqtt-broker",
        "x": 740,
        "y": 580,
        "wires": []
    },
    {
        "id": "connection-status",
        "type": "function",
        "z": "a1b2c3d4e5f6",
        "name": "Check Connection",
        "func": "msg.payload = (msg.payload !== 0) ? 'Connected' : 'Disconnected';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 640,
        "wires": [["status-text"]]
    },
    {
        "id": "status-text",
        "type": "ui_text",
        "z": "a1b2c3d4e5f6",
        "group": "ui-group-3",
        "order": 1,
        "width": "6",
        "height": "1",
        "name": "Connection Status",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 540,
        "y": 640,
        "wires": []
    }
]